
==================== FINAL INTERFACE ====================
2019-07-01 08:14:03.548467 UTC

interface main@main:Colored 8002
  interface hash: 49e5d4bae06d7b335ba03d6c42227c94
  ABI hash: d7252f0baf45ad4ede89350d59fc16c5
  export-list hash: dd1dc068e1e40ef2bd31f5836adb89f4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: bc3095f4b553734f0dadeae05b5c3808
  sig of: Nothing
  used TH splices: False
  where
exports:
  Colored.ceovi
  Colored.inic_tabela
  Colored.ispeglaj
  Colored.izmeni_novu
  Colored.napravi_novu
  Colored.promeni_zadnji
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
5e55876d3f20f9586505fa8a99119ad0
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Colored.$trModule2
                   Colored.$trModule1) -}
b4bbe23581488c354c2cf388efaa7911
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Colored"#) -}
0017b21843adb75d4710d3fdb3298ff5
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
b46b4087aaa8730c7b64de7bb5a00e29
  ceovi :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,1*U> -}
606e04dc6c21322e385956b4ca252fba
  inic_tabela :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela1) -}
5682f8432ba7c0424f39f111c7d283d3
  inic_tabela1 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela2) -}
9ab88b4474ede14a934da6a8eb4f2ff2
  inic_tabela2 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela3) -}
f70ed90c858f90fa3d667b8944100437
  inic_tabela3 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela4) -}
6749cc61142a89793b5032553030348d
  inic_tabela4 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela5) -}
c53bd96656727b0ca35c3b182d4d9fc0
  inic_tabela5 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   Colored.inic_tabela6) -}
224364b058c272da7c42ae6ae1aa5052
  inic_tabela6 :: [[GHC.Types.Char]]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
2c26b23e08c6bb2312da107b88432b38
  ispeglaj ::
    [(GHC.Base.String, GHC.Base.String)] -> [GHC.Base.String]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
3d02811f7ffa8101257a3959dd70e5a4
  izmeni_novu :: [GHC.Base.String] -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (t :: [GHC.Base.String]) ->
                 let {
                   n :: [GHC.Types.Char]
                   = GHC.Base.map
                       @ GHC.Types.Char
                       @ GHC.Types.Char
                       Colored.izmeni_novu1
                       (GHC.List.$w!! @ GHC.Base.String t 3#)
                 } in
                 let {
                   n1 :: [GHC.Base.String]
                   = GHC.List.reverse1
                       @ GHC.Base.String
                       (GHC.List.$wunsafeTake
                          @ [GHC.Types.Char]
                          3#
                          (GHC.List.reverse1
                             @ GHC.Base.String
                             t
                             (GHC.Types.[] @ GHC.Base.String)))
                       (GHC.Types.[] @ GHC.Base.String)
                 } in
                 let {
                   n2 :: [[GHC.Types.Char]] = GHC.Types.: @ [GHC.Types.Char] n n1
                 } in
                 letrec {
                   $wgo :: [[GHC.Types.Char]] -> GHC.Prim.Int# -> [[GHC.Types.Char]]
                     {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
                   = \ (w :: [[GHC.Types.Char]]) (ww :: GHC.Prim.Int#) ->
                     case w of wild {
                       [] -> n2
                       : y ys
                       -> case ww of ds1 {
                            DEFAULT
                            -> GHC.Types.: @ [GHC.Types.Char] y ($wgo ys (GHC.Prim.-# ds1 1#))
                            1# -> GHC.Types.: @ [GHC.Types.Char] y n2 } }
                 } in
                 $wgo t 3#) -}
42664e4cd834994d6ef2481f2b4648dd
  izmeni_novu1 :: GHC.Types.Char -> GHC.Types.Char
  {- Arity: 1, HasNoCafRefs, Strictness: <S(S),1*U(1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GHC.Types.Char) ->
                 case x of wild { GHC.Types.C# x1 ->
                 case x1 of wild1 {
                   DEFAULT -> GHC.Types.C# '-'# '_'# -> GHC.Types.C# '_'# } }) -}
edf661542abec2badda3e4b4a4695c28
  napravi_novu ::
    [GHC.Base.String] -> GHC.Base.String -> [GHC.Base.String]
  {- Arity: 2, Strictness: <L,U><S,U> -}
5bd48863af30652d3344dcf1c1d01659
  promeni_zadnji :: GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (x :: GHC.Base.String) ->
                 GHC.List.reverse1
                   @ GHC.Types.Char
                   (GHC.Types.:
                      @ GHC.Types.Char
                      Colored.promeni_zadnji1
                      (case GHC.List.reverse1
                              @ GHC.Types.Char
                              x
                              (GHC.Types.[] @ GHC.Types.Char) of wild {
                         [] -> GHC.List.scanl2 @ GHC.Types.Char : ds1 xs -> xs }))
                   (GHC.Types.[] @ GHC.Types.Char)) -}
eabaf9ddfa4b343d7de2f737b154f4f3
  promeni_zadnji1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '?'#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

