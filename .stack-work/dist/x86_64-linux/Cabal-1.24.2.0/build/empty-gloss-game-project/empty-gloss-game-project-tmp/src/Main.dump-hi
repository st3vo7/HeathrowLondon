
==================== FINAL INTERFACE ====================
2019-06-20 12:08:16.260585 UTC

interface main@main:Main 8002
  interface hash: ecad9c74d237d30a11f63c74b64ffcca
  ABI hash: 8be9317ee35f4eecaa4e8ff011f8d3f6
  export-list hash: 6123a2ca255b0898bed6519f98ffedd4
  orphan hash: 56bac288ebc3894b989fa0d61cc11109
  flag hash: 9cc5af640bff0536be5d3be83151f467
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.getIntsAtPosition
  Main.groupsOf
  Main.intsToStrings
  Main.main
  Main.render
module dependencies: Board Colored Config Display Game Pictures
                     ShortestPath
package dependencies: GLURaw-2.0.0.3@GLURaw-2.0.0.3-8mjdaTrY6fT50flhL8375P
                      GLUT-2.7.0.12@GLUT-2.7.0.12-1hjRN2wjD0V7bd3QjOEugK
                      JuicyPixels-3.2.8.2@JuicyPixels-3.2.8.2-JViBgltRj36L5XuDdgF7cx
                      ObjectName-1.1.0.1@ObjectName-1.1.0.1-EiFOWjUQWWuLyOhtrmuIWX
                      OpenGL-3.0.2.0@OpenGL-3.0.2.0-AneXe1zSg4KAYwAAwF6c1
                      OpenGLRaw-3.2.5.0@OpenGLRaw-3.2.5.0-FVpt3IkfQZvCtyIC3Snu0R
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bmp-1.2.6.3@bmp-1.2.6.3-43OLkH0uuwm831pBFpx2PZ
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      fixed-0.2.1.1@fixed-0.2.1.1-8Jr82l0kss5Gr4nEevmXlZ ghc-prim-0.5.0.0
                      gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT
                      gloss-game-0.3.3.0@gloss-game-0.3.3.0-4sMIsRk9e9mDpSvX13whrm
                      gloss-juicy-0.2.2@gloss-juicy-0.2.2-BjcwtPSfHt1HGYiOTiDZ6y
                      gloss-rendering-1.10.3.5@gloss-rendering-1.10.3.5-FgDllLAutdLH3OZ8t4ZEzo
                      half-0.2.2.3@half-0.2.2.3-GHJ372Ls7FBA3PAGtGHfOR
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         gloss-rendering-1.10.3.5@gloss-rendering-1.10.3.5-FgDllLAutdLH3OZ8t4ZEzo:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: JuicyPixels-3.2.8.2@JuicyPixels-3.2.8.2-JViBgltRj36L5XuDdgF7cx:Codec.Picture.Tga
                         JuicyPixels-3.2.8.2@JuicyPixels-3.2.8.2-JViBgltRj36L5XuDdgF7cx:Codec.Picture.Tiff
                         JuicyPixels-3.2.8.2@JuicyPixels-3.2.8.2-JViBgltRj36L5XuDdgF7cx:Codec.Picture.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity base-4.9.1.0:Data.List.NonEmpty
                         base-4.9.1.0:Data.Monoid base-4.9.1.0:Data.Semigroup
                         base-4.9.1.0:Data.Type.Equality base-4.9.1.0:Data.Version
                         base-4.9.1.0:Data.Void base-4.9.1.0:GHC.Exts
                         base-4.9.1.0:GHC.Generics base-4.9.1.0:GHC.IO.Exception
                         base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT:Graphics.Gloss 58eacb3f8485bcd8d009c7ff8ffe14ab
import  -/  gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT:Graphics.Gloss.Data.Color 8e5e6ea72b4261d7595c1931a0a9edb3
import  -/  gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT:Graphics.Gloss.Data.Display 62c56640d64ae00e0480925f191daa7e
import  -/  gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT:Graphics.Gloss.Data.Picture fd5c4f23ee339ce6738783fc4ab4a0a5
import  -/  gloss-1.10.2.5@gloss-1.10.2.5-EDPkhjN4e926j3oUsqTTMT:Graphics.Gloss.Interface.Pure.Simulate 0dc54674b8aef0ecd39e9db3bd083b9c
import  -/  gloss-game-0.3.3.0@gloss-game-0.3.3.0-4sMIsRk9e9mDpSvX13whrm:Graphics.Gloss.Game 3421bef7dfb0f57e993263f043c0a29c
import  -/  gloss-rendering-1.10.3.5@gloss-rendering-1.10.3.5-FgDllLAutdLH3OZ8t4ZEzo:Graphics.Gloss.Internals.Data.Picture cbb8b48928bf128ac054b70988405a09
import  -/  Board 0fb7ab3b943a32e1dc7f1a8674ae73d5
  exports: 6b06484ab9b742d7c9477ee59a0e7ef4
import  -/  Colored d7252f0baf45ad4ede89350d59fc16c5
  exports: dd1dc068e1e40ef2bd31f5836adb89f4
  inic_tabela 606e04dc6c21322e385956b4ca252fba
  izmeni_novu 3d02811f7ffa8101257a3959dd70e5a4
  napravi_novu edf661542abec2badda3e4b4a4695c28
import  -/  Config 2e9e080cc07eed1686f5894abde6d4db
  exports: b39e9c25461cdb937e7e3eb55f2778ce
  boardData 79421bc59e16b558577690bf2622de2c
  windowSize 87edbe2fcc82d125cd53d473967c50fc
import  -/  Display 925d17df3e86a8bbe4a8936409a17bd3
  exports: 77cd7dc6b97d9bee0c67680b91206493
  board b0fede0a6fd79a8fe4b698582c9853ae
  boardValuesA 70f7d2d8a19d2975b8444862182396f1
  boardValuesB 083230e2d81cbeb063fd8911c04d2786
  boardValuesC 3942d8318373b02b641177c4bed38af4
  end 977601b44edc4940b27ef9c7a1166036
  splash eb372a974cc1f39c38b5e61649efc8a1
import  -/  Game 9cd82f52803b3be88a1b6075e45f799e
  exports: 7719c63944938d6e618589b9b787e48f
  ModeAnimate 257eaa12448fc0ed32bf0e2b4316111a
  ModeEnd 34fc8e92518476d3ceac504d074e084b
  ModeSplash 8238f90f323eca459f95aa3bce65a58f
  State f07e0431a95499c5f8d2030ea8b69285
  State 1c65fa58d25d699812887e05c4f50541
  cene_trojki bf02835005057b48499ce14ddf4e42ca
  contentScale cf64224b2b24324a77c9b4b073de66c8
  handleEvent c54a4764b56b9eca4e803254f23b073f
  mode fa43745594a282e6aea05c106ab5a98d
  windowSize 761c0a5626b11ba9a650ae71ddaa4055
import  -/  ShortestPath b64913c440018ea7b2c008a4ce279a12
  exports: 7bab5b0d6cd02c44d9e9121cb250f09f
  Section 0cd873a6adc4349e8cceabe69043a86a
  optimalPath a86302aab1967e186dc7f52b20e1c5f1
d2ada01a519caea4efc153c59b25dfe2
  $sread :: GHC.Base.String -> GHC.Types.Int
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Base.String) ->
                 case Text.Read.readEither
                        @ GHC.Types.Int
                        GHC.Read.$fReadInt
                        s of wild {
                   Data.Either.Left x
                   -> GHC.Err.errorWithoutStackTrace
                        @ 'GHC.Types.PtrRepLifted
                        @ GHC.Types.Int
                        x
                   Data.Either.Right y -> y }) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
4d5f6550046edb9bda1a4b53999a97c4
  $wgroupsOf :: GHC.Prim.Int# -> [a] -> [[a]]
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
ef8f2d93850500ff69abb63d29584b4d
  $wrender ::
    [[GHC.Types.Int]]
    -> Game.Mode
    -> (GHC.Types.Int, GHC.Types.Int)
    -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 3, Strictness: <L,U><S,1*U><L,1*U(1*U(U),1*U(U))>,
     Inline: [0],
     Unfolding: (\ (ww :: [[GHC.Types.Int]])
                   (ww1 :: Game.Mode)
                   (ww2 :: (GHC.Types.Int, GHC.Types.Int)) ->
                 case ww1 of wild {
                   Game.ModeSplash -> Display.fullImage Pictures.splash ww2
                   Game.ModeAnimate
                   -> Graphics.Gloss.Internals.Data.Picture.Pictures
                        (GHC.Types.:
                           @ Graphics.Gloss.Internals.Data.Picture.Picture
                           (Graphics.Gloss.Internals.Data.Picture.Pictures
                              (GHC.Types.:
                                 @ Graphics.Gloss.Internals.Data.Picture.Picture
                                 Display.board
                                 (GHC.Types.:
                                    @ Graphics.Gloss.Internals.Data.Picture.Picture
                                    (Graphics.Gloss.Internals.Data.Picture.Translate
                                       Display.boardValuesA2
                                       Display.boardValuesA1
                                       (Display.boardValuesA_go
                                          (Main.render_go2
                                             (GHC.Base.map
                                                @ [GHC.Types.Int]
                                                @ [GHC.Types.Char]
                                                Main.render3
                                                ww))))
                                    (GHC.Types.:
                                       @ Graphics.Gloss.Internals.Data.Picture.Picture
                                       (Graphics.Gloss.Internals.Data.Picture.Translate
                                          Display.boardValuesB2
                                          Display.boardValuesB1
                                          (Display.boardValuesB_go
                                             (Main.render_go1
                                                (GHC.Base.map
                                                   @ [GHC.Types.Int]
                                                   @ [GHC.Types.Char]
                                                   Main.render2
                                                   ww))))
                                       (GHC.Types.:
                                          @ Graphics.Gloss.Internals.Data.Picture.Picture
                                          (Graphics.Gloss.Internals.Data.Picture.Translate
                                             Display.boardValuesC2
                                             Display.boardValuesC1
                                             (Display.boardValuesC_go
                                                (Main.render_go
                                                   (GHC.Base.map
                                                      @ [GHC.Types.Int]
                                                      @ [GHC.Types.Char]
                                                      Main.render1
                                                      ww))))
                                          (GHC.Types.[]
                                             @ Graphics.Gloss.Internals.Data.Picture.Picture))))))
                           (GHC.Types.[] @ Graphics.Gloss.Internals.Data.Picture.Picture))
                   Game.ModeEnd -> Display.fullImage Pictures.end ww2 }) -}
edefffacd1913aaded63aa3ff55ff955
  getIntsAtPosition ::
    [[GHC.Types.Int]] -> GHC.Types.Int -> [GHC.Types.Int]
  {- Arity: 2, Strictness: <S,1*U><L,U(U)>,
     Unfolding: InlineRule (2, True, False)
                (\ (list :: [[GHC.Types.Int]]) (index :: GHC.Types.Int) ->
                 GHC.Base.build
                   @ GHC.Types.Int
                   (\ @ b1
                      (c :: GHC.Types.Int -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Int]
                      @ b1
                      (GHC.Base.mapFB
                         @ GHC.Types.Int
                         @ b1
                         @ [GHC.Types.Int]
                         c
                         (\ (ds :: [GHC.Types.Int]) ->
                          GHC.List.!! @ GHC.Types.Int ds index))
                      n
                      list)) -}
a0b27c85f45ada18445113996b120fa8
  groupsOf :: GHC.Types.Int -> [a] -> [[a]]
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a (w :: GHC.Types.Int) (w1 :: [a]) ->
                 case w of ww { GHC.Types.I# ww1 -> Main.$wgroupsOf @ a ww1 w1 }) -}
189e996c38070b3532f555a82474782d
  intsToStrings :: [GHC.Types.Int] -> [GHC.Base.String]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ints :: [GHC.Types.Int]) ->
                 GHC.Base.build
                   @ [GHC.Types.Char]
                   (\ @ b1
                      (c :: [GHC.Types.Char] -> b1 -> b1)[OneShot]
                      (n :: b1)[OneShot] ->
                    GHC.Base.foldr
                      @ GHC.Types.Int
                      @ b1
                      (GHC.Base.mapFB
                         @ [GHC.Types.Char]
                         @ b1
                         @ GHC.Types.Int
                         c
                         GHC.Show.$fShowInt_$cshow)
                      n
                      ints)) -}
43147c3e4ad9b3efafc4fe2eabf670f6
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f77b6a0a29b805ea95cd861ad463e843
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.FD.openFile1
                        Main.main21
                        GHC.IO.IOMode.ReadMode
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Text.hGetContents1
                        ipv1
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main16
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 let {
                   threes :: [[GHC.Types.Int]]
                   = Main.$wgroupsOf
                       @ GHC.Types.Int
                       3#
                       (GHC.Base.map
                          @ [GHC.Types.Char]
                          @ GHC.Types.Int
                          Main.$sread
                          (Data.OldList.lines ipv3))
                 } in
                 let {
                   pathString :: [GHC.Types.Char]
                   = Main.main_go
                       (ShortestPath.optimalPath
                          (GHC.Base.map
                             @ [GHC.Types.Int]
                             @ ShortestPath.Section
                             Main.main14
                             threes))
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Show.showList__
                           @ [GHC.Types.Char]
                           GHC.Show.shows_$cshowList1
                           (Colored.izmeni_novu
                              (Colored.napravi_novu Colored.inic_tabela pathString))
                           (GHC.Types.[] @ GHC.Types.Char))
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Najbolja putanja je: "#
                           pathString)
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case Graphics.Gloss.Internals.Interface.Game.playWithBackendIO1
                        @ Game.State
                        @ Graphics.Gloss.Internals.Interface.Backend.GLUT.GLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState
                        Graphics.Gloss.Internals.Interface.Backend.GLUT.$fBackendGLUTState_$cinitBackendState
                        Main.main9
                        Graphics.Gloss.Data.Color.white
                        Main.main8
                        (Game.State threes Game.ModeSplash Config.windowSize Main.main7)
                        Main.main6
                          `cast`
                        (<Game.State>_R
                         ->_R Sym (GHC.Types.N:IO[0]
                                       <Graphics.Gloss.Internals.Data.Picture.Picture>_R))
                        Main.main5
                          `cast`
                        (<Graphics.Gloss.Internals.Interface.Event.Event>_R
                         ->_R <Game.State>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Game.State>_R))
                        Main.main2
                          `cast`
                        (<GHC.Types.Float>_R
                         ->_R <Game.State>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Game.State>_R))
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 (# ipv10, GHC.Tuple.() #) } } } } } }) -}
d8943da47d9d8a7ca9cbc198098375c0
  main10 :: (GHC.Types.Int, GHC.Types.Int)
  {- HasNoCafRefs, Unfolding: ((Main.main12, Main.main11)) -}
3df1a907b8a2fabb602a9ff86909cec8
  main11 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
3e85a21b4d74e46d87306c26fc36152c
  main12 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 600#) -}
f8e0c744cadbb9e3f9ce30261062cf0a
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "From Heathrow to London"#) -}
4672e0650cd126615cf4b40cdb05044f
  main14 :: [GHC.Types.Int] -> ShortestPath.Section
  {- Arity: 1,
     Unfolding: (\ (ds :: [GHC.Types.Int]) ->
                 case ds of wild {
                   [] -> Main.main15 GHC.Prim.void#
                   : a ds1
                   -> case ds1 of wild1 {
                        [] -> Main.main15 GHC.Prim.void#
                        : b ds2
                        -> case ds2 of wild2 {
                             [] -> Main.main15 GHC.Prim.void#
                             : c ds3
                             -> case ds3 of wild3 {
                                  [] -> ShortestPath.Section a b c
                                  : ipv ipv1 -> Main.main15 GHC.Prim.void# } } } }) -}
5ae91b1ded23fbe12eec50b96cee4d43
  main15 :: GHC.Prim.Void# -> ShortestPath.Section
  {- Arity: 1, Strictness: <B,A>x -}
ef79f48a91362275c17f7c6cd01951ce
  main16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.showList__2
                   Main.main17) -}
2f41595f74b95711f722937e8c79e8e5
  main17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main18) -}
bdd135ca37e9ab70e098cb6687169ca7
  main18 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString
                   Config.boardData7
                   Main.main19) -}
260e51b66f40277266217214639a8996
  main19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main20) -}
2a1d7c6be9f9c9523c602b0fe7df915a
  main2 ::
    GHC.Types.Float
    -> Game.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Game.State #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (time :: GHC.Types.Float)
                   (world1 :: Game.State)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    Graphics.Gloss.Game.play2
                      @ Game.State
                      Main.main3
                      time
                      world1 #)) -}
bf5b3f7c4535356d82191b87f56fde89
  main20 :: GHC.Base.String
  {- Unfolding: (Main.main_showl Config.boardData1) -}
2669abb7cc22dba0e214dcbf8fa573c0
  main21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "src/ulaz.txt"#) -}
744cb6a3088a674002f1022d4f097719
  main22 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
3f9443cfa36ead143a0b1ff07d43d104
  main3 :: [GHC.Types.Float -> Game.State -> Game.State]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Types.Float -> Game.State -> Game.State)
                   Main.main4
                   (GHC.Types.[] @ (GHC.Types.Float -> Game.State -> Game.State))) -}
529cc4356e1a9db0018a3e5ecd7537da
  main4 :: GHC.Types.Float -> Game.State -> Game.State
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,A><S(LSLL),1*U(U,U,U,U)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (seconds :: GHC.Types.Float) (state :: Game.State) ->
                 case state of wild { Game.State ds1 ds2 ds3 ds4 ->
                 case ds2 of wild1 { DEFAULT -> wild } }) -}
266340437c0137c92b232d5fa34e11f8
  main5 ::
    Graphics.Gloss.Internals.Interface.Event.Event
    -> Game.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Game.State #)
  {- Arity: 3, HasNoCafRefs,
     Unfolding: (\ (event :: Graphics.Gloss.Internals.Interface.Event.Event)
                   (world1 :: Game.State)[OneShot]
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Game.handleEvent event world1 #)) -}
0a0a6ba28a31148a0f88762f461906d1
  main6 ::
    Game.State
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Graphics.Gloss.Internals.Data.Picture.Picture #)
  {- Arity: 2,
     Unfolding: (\ (x :: Game.State)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, Main.render x #)) -}
a3901bd6eee456c6bea66d3df584f850
  main7 :: GHC.Types.Float
  {- HasNoCafRefs, Unfolding: (GHC.Types.F# 1.0#) -}
5885992df8f56de37d2dfda54e5421bf
  main8 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
fd119b4b2004b7c230cd0a076488edfd
  main9 :: Graphics.Gloss.Data.Display.Display
  {- Unfolding: (Graphics.Gloss.Data.Display.InWindow
                   Main.main13
                   Config.windowSize
                   Main.main10) -}
dc345e263a34d5a5c1a24bae697b9140
  main_go ::
    [(ShortestPath.Label, GHC.Types.Int)] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
82972a309dfe042f55e1f06e8f6360d8
  main_showl :: [[GHC.Types.Char]] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
98622b88cfed036c975d0977b28fe049
  render ::
    Game.State -> Graphics.Gloss.Internals.Data.Picture.Picture
  {- Arity: 1, Strictness: <S(LSLL),1*U(U,1*U,1*U(1*U(U),1*U(U)),A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Game.State) ->
                 case w of ww { Game.State ww1 ww2 ww3 ww4 ->
                 Main.$wrender ww1 ww2 ww3 }) -}
f1002f3d4b77a59e93d6927eab4099ed
  render1 :: [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1,
     Unfolding: (\ (x :: [GHC.Types.Int]) ->
                 case GHC.List.$w!!
                        @ GHC.Types.Int
                        x
                        2# of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
6f4f785cea6d0209988c92af6f463883
  render2 :: [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1,
     Unfolding: (\ (x :: [GHC.Types.Int]) ->
                 case GHC.List.$w!!
                        @ GHC.Types.Int
                        x
                        1# of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
7083236d9f14f59d12286ba862cd0624
  render3 :: [GHC.Types.Int] -> GHC.Base.String
  {- Arity: 1,
     Unfolding: (\ (x :: [GHC.Types.Int]) ->
                 case GHC.List.$w!!
                        @ GHC.Types.Int
                        x
                        0# of ww2 { GHC.Types.I# ww3 ->
                 case GHC.Show.$wshowSignedInt
                        0#
                        ww3
                        (GHC.Types.[] @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                 GHC.Types.: @ GHC.Types.Char ww5 ww6 } }) -}
7f7aa3d6bf07bb7c31178346840efd27
  render_go ::
    [[GHC.Types.Char]]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
487013b10f91f976a1b9ebaaf2f0c124
  render_go1 ::
    [[GHC.Types.Char]]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
83c1a98a881876428879a87f8a712185
  render_go2 ::
    [[GHC.Types.Char]]
    -> [Graphics.Gloss.Internals.Data.Picture.Picture]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
"SPEC/Main read @ Int" [ALWAYS] forall ($dRead :: GHC.Read.Read
                                                    GHC.Types.Int)
  Text.Read.read @ GHC.Types.Int $dRead = Main.$sread
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

